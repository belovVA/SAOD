4.2. Разрешение конфликтов: открытое хеширование
Пусть имеется   n  элементов  а1, а2, а3, . . ., аn , на основе которых требуется построить хеш-таблицу, 
причем некоторые ключи могут конфликтовать между собой, претендуя на одну и ту же ячейку таблицы. 
Идея открытого хеширования совершенно прозрачна: связать все элементы с одним и тем же значением хеш-функции во вспомогательный линейный список.
Данный метод иногда называют методом цепочек. 
Обращаю внимание, что мы еще раз приходим к необходимости использования комбинированной структуры данных – массива указателей. 
Хеш-таблица как массив записей должна хранить не только ключи элементов, но и по два указателя на начало и конец вспомогательного списка.
Алгоритм построения хеш-таблицы:
•	находим значение хеш-функции для очередного ключа и по этому значению как индексу входим в таблицу
•	если данная клетка таблицы пустая, то записываем в нее соответствующий ключ
•	если ячейка занята, то сравниваем хранящийся там ключ с заданным ключом:
o	если ключи совпадают, то каким-то образом обрабатываем повторный ключ (например, просто ничего не выполняем)
o	если ключи не совпадают, то добавляем новый ключ в конец списка

Алгоритм поиска в построенной таблице:
•	находим значение хеш-функции для искомого ключа и по этому значению как индексу входим в таблицу
•	если ячейка с найденным индексом пустая, то поиск заканчивается неудачей
•	если ячейка не пустая, то выполняем сравнение ключей:
o	если ключи совпадают, то поиск заканчивается за одно сравнение
o	если ключи не совпадают, то организуем просмотр линейного вспомогательного списка с положительным или отрицательным результатом

для данного метода большое значение имеет равномерность распределения ключей по хеш-таблице,
что гарантирует короткие вспомогательные списки и тем самым уменьшает число сравнений при поиске.
Наихудшим является случай, когда для всех ключей хеш-функция дает одно и тоже значение, и все элементы выстраиваются в один длинный линейный список. 
Другим фактором, влияющим на эффективность открытого хеширования, является размер хеш-таблицы по отношению к числу входных данных.
Если эти величины равны, то теоретически можно обойтись без линейных списков, если между ключами нет конфликтов. 
На практике рекомендуют выбирать размер хеш-таблицы равным  n/2.
